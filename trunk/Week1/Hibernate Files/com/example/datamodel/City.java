package com.example.datamodel;
// Generated Apr 13, 2012 2:20:12 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * City generated by hbm2java
 */
@Entity
@Table(name="CITY"
    ,schema="GUEST"
)
public class City  implements java.io.Serializable {


     private long id;
     private Country country;
     private String cityName;
     private Set<Destination> destinations = new HashSet<Destination>(0);
     private Set<Office> offices = new HashSet<Office>(0);

    public City() {
    }

	
    public City(long id) {
        this.id = id;
    }
    public City(long id, Country country, String cityName, Set<Destination> destinations, Set<Office> offices) {
       this.id = id;
       this.country = country;
       this.cityName = cityName;
       this.destinations = destinations;
       this.offices = offices;
    }
   
     @Id 
     @SequenceGenerator(name="city_id",sequenceName="city_id_seq")
    @GeneratedValue(strategy=GenerationType.SEQUENCE,generator="city_id")

    
    @Column(name="ID", unique=true, nullable=false, precision=10, scale=0)
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY_ID")
    public Country getCountry() {
        return this.country;
    }
    
    public void setCountry(Country country) {
        this.country = country;
    }
    
    @Column(name="CITY_NAME", length=20)
    public String getCityName() {
        return this.cityName;
    }
    
    public void setCityName(String cityName) {
        this.cityName = cityName;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="city")
    public Set<Destination> getDestinations() {
        return this.destinations;
    }
    
    public void setDestinations(Set<Destination> destinations) {
        this.destinations = destinations;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="city")
    public Set<Office> getOffices() {
        return this.offices;
    }
    
    public void setOffices(Set<Office> offices) {
        this.offices = offices;
    }




}


